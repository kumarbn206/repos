function [selectedOut,rxIFCalibFullLog] = importGainRxIFLogs(filename, legacyLog)
%IMPORTFILE Import data from a text file
%  [selectedOut,rxIFCalibFullLog]  = IMPORTFILE(FILENAME) reads data from text file
%  FILENAME for the default selection.  Returns the data as a table.
%
%  NEWLOGRXIFV2 = IMPORTFILE(FILE, DATALINES) reads data for the
%  specified row interval(s) of text file FILENAME. Specify DATALINES as
%  a positive scalar integer or a N-by-2 array of positive scalar
%  integers for dis-contiguous row intervals.
%
%  Example:
%  rfeswcalibrationtc063rxIfCalibrateConfigProfileDISABLEDVCS = importfile("C:\Users\nxf59937\Desktop\STRX-8711\rfe_sw_calibration_tc_063_rxIfCalibrateConfigProfile_DISABLED_VCS.txt", "legacy");
%  newLogRXIFv2 = importfile("C:\Users\nxf59937\Desktop\STRX-8711\newLogRXIFv2.txt");
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 20-Jan-2023 12:05:47

%% Input handling

% DataLines defaults
dataLines = [1, Inf];

% Variable cotrolling the number of variables of the import
numberOfLogVariables = 21;

if nargin < 2
    legacyLog = false;
else
    if legacyLog == true
        numberOfLogVariables = 10;
    end
end


%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", numberOfLogVariables);

if (legacyLog == true)
    % Specify range and delimiter
    opts.DataLines = dataLines;
    opts.Delimiter = ["\t", " ->", "%", ",  IF", ", IF Gain", ":", ";", "> ", "[", "]"];

    % Specify column names and types
    opts.VariableNames = ["Var1", "Var2", "Var3", "Var4", "Var5", "Var6", "Var7", "Var8", "Var9", "VarName10"];
    opts.SelectedVariableNames = "VarName10";
    opts.VariableTypes = ["string", "string", "string", "string", "string", "string", "string", "string", "string", "double"];

    % Specify file level properties
    opts.ImportErrorRule = "omitrow";
    opts.MissingRule = "omitrow";
    opts.ExtraColumnsRule = "ignore";
    opts.EmptyLineRule = "read";

    % Specify variable properties
    opts = setvaropts(opts, ["Var1", "Var2", "Var3", "Var4", "Var5", "Var6", "Var7", "Var8", "Var9"], "WhitespaceRule", "preserve");
    opts = setvaropts(opts, ["Var1", "Var2", "Var3", "Var4", "Var5", "Var6", "Var7", "Var8", "Var9"], "EmptyFieldRule", "auto");
    opts = setvaropts(opts, "VarName10", "ThousandsSeparator", ",");


    % Import the data
    rxIFCalibFullLog = readtable(filename, opts);

    selectedOut = rxIFCalibFullLog.VarName10;

else
    % Specify range and delimiter
    opts.DataLines = dataLines;
    opts.Delimiter = ["[", "]", "|"];

    % Specify column names and types
    opts.VariableNames = ["VarName1", "RXIFDEBUG", "VarName3", "Fine_tune_iteration", "Stage", "Rf_old", "Rf_new", "Cf_old", "Cf_new", "Cin_old", "Cin_new", "IF_HPF_target", "IF_HPF_measured", "IF_HPF_RelError", "VarName15", "VarName16", "IF_Gain_target", "IF_Gain_measured", "IF_Gain_RelError", "VarName20", "VarName21"];
    opts.VariableTypes = ["string", "categorical", "categorical", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "categorical", "string", "double", "double", "double", "categorical", "string"];

    % Specify file level properties
    opts.ImportErrorRule = "omitrow";
    opts.MissingRule = "omitrow";
    opts.ExtraColumnsRule = "ignore";
    opts.EmptyLineRule = "read";

    % Specify variable properties
    opts = setvaropts(opts, ["VarName1", "VarName16", "VarName21"], "WhitespaceRule", "preserve");
    opts = setvaropts(opts, ["VarName1", "RXIFDEBUG", "VarName3", "VarName15", "VarName16", "VarName20", "VarName21"], "EmptyFieldRule", "auto");

    % Import the data
    rxIFCalibFullLog = readtable(filename, opts);

    selectedOut = rxIFCalibFullLog.IF_Gain_RelError;

end


end