
// Initialization bits that correct defulats values erros in the register

// RX1
RX1.IF_BIST.OUT_BUF_LG = 0x5;

// Stability bits of the 9+1 profies 
RX1.IF_HB_STB.ST1 = 0x4A;
RX1.IF_HB_STB.ST2 = 0x4B;
RX1.P0_IF_STB.ST1 = 0x4A;
RX1.P0_IF_STB.ST2 = 0x4B;
RX1.P1_IF_STB.ST1 = 0x4A;
RX1.P1_IF_STB.ST2 = 0x4B;
RX1.P2_IF_STB.ST1 = 0x4A;
RX1.P2_IF_STB.ST2 = 0x4B;
RX1.P3_IF_STB.ST1 = 0x4A;
RX1.P3_IF_STB.ST2 = 0x4B;
RX1.P4_IF_STB.ST1 = 0x4A;
RX1.P4_IF_STB.ST2 = 0x4B;
RX1.P5_IF_STB.ST1 = 0x4A;
RX1.P5_IF_STB.ST2 = 0x4B;
RX1.P6_IF_STB.ST1 = 0x4A;
RX1.P6_IF_STB.ST2 = 0x4B;
RX1.P7_IF_STB.ST1 = 0x4A;
RX1.P7_IF_STB.ST2 = 0x4B;
RX1.P8_IF_STB.ST1 = 0x4A;
RX1.P8_IF_STB.ST2 = 0x4B;

// Reset values for the filter
RX1.IF_HB_R.ST2_RLPF_BINARY = 0x0;
RX1.IF_HB_R.ST2_RLPF_UNARY = 0x0;


// RX2
RX2.IF_BIST.OUT_BUF_LG = 0x5;

// Stability bits of the 9+1 profies 
RX2.IF_HB_STB.ST1 = 0x4A;
RX2.IF_HB_STB.ST2 = 0x4B;
RX2.P0_IF_STB.ST1 = 0x4A;
RX2.P0_IF_STB.ST2 = 0x4B;
RX2.P1_IF_STB.ST1 = 0x4A;
RX2.P1_IF_STB.ST2 = 0x4B;
RX2.P2_IF_STB.ST1 = 0x4A;
RX2.P2_IF_STB.ST2 = 0x4B;
RX2.P3_IF_STB.ST1 = 0x4A;
RX2.P3_IF_STB.ST2 = 0x4B;
RX2.P4_IF_STB.ST1 = 0x4A;
RX2.P4_IF_STB.ST2 = 0x4B;
RX2.P5_IF_STB.ST1 = 0x4A;
RX2.P5_IF_STB.ST2 = 0x4B;
RX2.P6_IF_STB.ST1 = 0x4A;
RX2.P6_IF_STB.ST2 = 0x4B;
RX2.P7_IF_STB.ST1 = 0x4A;
RX2.P7_IF_STB.ST2 = 0x4B;
RX2.P8_IF_STB.ST1 = 0x4A;
RX2.P8_IF_STB.ST2 = 0x4B;

// Reset values for the filter
RX2.IF_HB_R.ST2_RLPF_BINARY = 0x0;
RX2.IF_HB_R.ST2_RLPF_UNARY = 0x0;


// RX3
RX3.IF_BIST.OUT_BUF_LG = 0x5;

// Stability bits of the 9+1 profies 
RX3.IF_HB_STB.ST1 = 0x4A;
RX3.IF_HB_STB.ST2 = 0x4B;
RX3.P0_IF_STB.ST1 = 0x4A;
RX3.P0_IF_STB.ST2 = 0x4B;
RX3.P1_IF_STB.ST1 = 0x4A;
RX3.P1_IF_STB.ST2 = 0x4B;
RX3.P2_IF_STB.ST1 = 0x4A;
RX3.P2_IF_STB.ST2 = 0x4B;
RX3.P3_IF_STB.ST1 = 0x4A;
RX3.P3_IF_STB.ST2 = 0x4B;
RX3.P4_IF_STB.ST1 = 0x4A;
RX3.P4_IF_STB.ST2 = 0x4B;
RX3.P5_IF_STB.ST1 = 0x4A;
RX3.P5_IF_STB.ST2 = 0x4B;
RX3.P6_IF_STB.ST1 = 0x4A;
RX3.P6_IF_STB.ST2 = 0x4B;
RX3.P7_IF_STB.ST1 = 0x4A;
RX3.P7_IF_STB.ST2 = 0x4B;
RX3.P8_IF_STB.ST1 = 0x4A;
RX3.P8_IF_STB.ST2 = 0x4B;

// Reset values for the filter
RX3.IF_HB_R.ST2_RLPF_BINARY = 0x0;
RX3.IF_HB_R.ST2_RLPF_UNARY = 0x0;

// RX4
RX4.IF_BIST.OUT_BUF_LG = 0x5;

// Stability bits of the 9+1 profies 
RX4.IF_HB_STB.ST1 = 0x4A;
RX4.IF_HB_STB.ST2 = 0x4B;
RX4.P0_IF_STB.ST1 = 0x4A;
RX4.P0_IF_STB.ST2 = 0x4B;
RX4.P1_IF_STB.ST1 = 0x4A;
RX4.P1_IF_STB.ST2 = 0x4B;
RX4.P2_IF_STB.ST1 = 0x4A;
RX4.P2_IF_STB.ST2 = 0x4B;
RX4.P3_IF_STB.ST1 = 0x4A;
RX4.P3_IF_STB.ST2 = 0x4B;
RX4.P4_IF_STB.ST1 = 0x4A;
RX4.P4_IF_STB.ST2 = 0x4B;
RX4.P5_IF_STB.ST1 = 0x4A;
RX4.P5_IF_STB.ST2 = 0x4B;
RX4.P6_IF_STB.ST1 = 0x4A;
RX4.P6_IF_STB.ST2 = 0x4B;
RX4.P7_IF_STB.ST1 = 0x4A;
RX4.P7_IF_STB.ST2 = 0x4B;
RX4.P8_IF_STB.ST1 = 0x4A;
RX4.P8_IF_STB.ST2 = 0x4B;

// Reset values for the filter
RX4.IF_HB_R.ST2_RLPF_BINARY = 0x0;
RX4.IF_HB_R.ST2_RLPF_UNARY = 0x0;